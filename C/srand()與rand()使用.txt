rand()和srand()要一起使用，其中srand()用来初始化随机数种子,rand()用来产生随机数。

因为默认情况下随机数种子为1，而相同的随机数种子产生的随机数是一样的,失去了随机性的意义，
所以为使每次得到的随机数不一样，用函数srand()初始化随机数种子。srand()的参数，用time函数值（即当前时间），
因为两次调用rand()函数的时间通常是不同的，这样就可以保证随机性了。


      要取得[a,b)的随机整数，使用(rand() % (b-a))+ a （结果值含a不含b）。
      要取得[a,b]的随机整数，使用(rand() % (b-a+1))+ a （结果值含a和b）。
      要取得(a,b]的随机整数，使用(rand() % (b-a))+ a + 1 （结果值不含a含b）。

      （总的来说，通用公式：a + rand() % n ；其中的a是起始值，n是整数的范围）

      要取得a到b之间的随机整数，另一种表示：a + (int)b * rand() / (RAND_MAX + 1)。

      要取得0～1之间的浮点数，可以使用rand() / double(RAND_MAX)。

代碼示例：
#include <iostream>
using namespace std;
#include   <stdlib.h>    
#include   <time.h> 
#define MIN 0    //随机数产生的范围    
#define MAX 99

int main()   
{ 
	int i; 
	srand((unsigned)time(NULL));
	cout<<"Ten random numbers from "<<MIN<<
	      " to "<<MAX<<" :/n"<<endl;   
	for(i=0; i<10; i++)          //产生随机数
	{
		cout<<MIN + rand() % (MAX + MIN - 1)<<"/t"; 
	}
	cout<<endl;
	return   0;   
} 